{"ast":null,"code":"var _jsxFileName = \"/Users/ahsanghani/WebstormProjects/reactbootcamp/src/App.js\";\n\n/**\n * Challenge: Add the ability for the user to choose a new username\n *\n * 1. Add state to this component to hold the new username in a controlled form\n * (https://reactjs.org/docs/forms.html#controlled-components)\n * (https://scrimba.com/p/p7P5Hd/cW8Jdfy)\n *\n * 2. Change userContext into a component that has state and provides the ability\n * to change the user's username. Make sure to export the provider and consumer\n * as named exports and update their uses anywhere else in the app\n *\n * 3. Give this App component the ability to update the username in context when the\n * button is clicked\n */\nimport React from \"react\";\nimport Header from \"./header\";\nimport { UserContextConsumer } from \"./usercontext\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newUsername: \"revo\"\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(UserContextConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, ({\n      username\n    }) => /*#__PURE__*/React.createElement(\"p\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }\n    }, \"No new notifications, \", username, \"!\"))), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"New username\",\n      value: this.state.newUsername,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"Change Username\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ahsanghani/WebstormProjects/reactbootcamp/src/App.js"],"names":["React","Header","UserContextConsumer","App","Component","state","newUsername","handleChange","e","name","value","target","setState","render","username"],"mappings":";;AAAA;;;;;;;;;;;;;;AAeA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,mBAAT,QAAoC,eAApC;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,WAAW,EAAE;AADP,KADwB;;AAAA,SAKhCC,YALgC,GAKhBC,CAAD,IAAO;AACpB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,CAAC,CAACG,MAA1B;AACA,WAAKC,QAAL,CAAc;AAAE,SAACH,IAAD,GAAQC;AAAV,OAAd;AACD,KAR+B;AAAA;;AAUhCG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAACC,MAAAA;AAAD,KAAD,kBACC;AAAG,MAAA,SAAS,EAAE,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAA6CA,QAA7C,MAFJ,CADF,CAFF,eAUE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,WAAW,EAAC,cAHd;AAIE,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,WAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKC,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAjBF,CADF;AAqBD;;AAhC+B;;AAmClC,eAAeJ,GAAf","sourcesContent":["/**\n * Challenge: Add the ability for the user to choose a new username\n *\n * 1. Add state to this component to hold the new username in a controlled form\n * (https://reactjs.org/docs/forms.html#controlled-components)\n * (https://scrimba.com/p/p7P5Hd/cW8Jdfy)\n *\n * 2. Change userContext into a component that has state and provides the ability\n * to change the user's username. Make sure to export the provider and consumer\n * as named exports and update their uses anywhere else in the app\n *\n * 3. Give this App component the ability to update the username in context when the\n * button is clicked\n */\n\nimport React from \"react\";\n\nimport Header from \"./header\";\nimport { UserContextConsumer } from \"./usercontext\";\n\nclass App extends React.Component {\n  state = {\n    newUsername: \"revo\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <main>\n          <UserContextConsumer>\n            {({username}) => (\n              <p className={\"main\"}>No new notifications, {username}!</p>\n            )}\n          </UserContextConsumer>\n        </main>\n\n        <input\n          type=\"text\"\n          name=\"username\"\n          placeholder=\"New username\"\n          value={this.state.newUsername}\n          onChange={this.handleChange}\n        />\n        <button>Change Username</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}