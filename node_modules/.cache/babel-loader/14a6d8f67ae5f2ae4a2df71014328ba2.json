{"ast":null,"code":"var _jsxFileName = \"/Users/ahsanghani/WebstormProjects/reactbootcamp/src/cartcontext.js\";\nimport React, { useState, useEffect } from \"react\";\nconst Context = React.createContext();\n\nfunction ContextProvider({\n  children\n}) {\n  const [allPhotos, setAllPhotos] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n  const url = \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\";\n  useEffect(() => {\n    // Get the data from the api\n    // save the data to state\n    fetch(url).then(res => res.json()).then(data => setAllPhotos(data));\n  }, []);\n\n  function toggleFavourite(id) {\n    const updatedArr = allPhotos.map(photo => {\n      if (photo.id === id) {\n        console.log(id);\n        console.log(!photo.isFavourite);\n        return { ...photo,\n          isFavourite: !photo.isFavourite\n        };\n      }\n\n      return photo;\n    });\n    setAllPhotos(updatedArr);\n  }\n\n  function addToCart(newItem) {\n    setCartItems(prevItems => [...prevItems, newItem]);\n  }\n\n  function removeFromCart(id) {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== id));\n  }\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      allPhotos,\n      toggleFavourite,\n      cartItems,\n      addToCart,\n      removeFromCart\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nexport { ContextProvider, Context };","map":{"version":3,"sources":["/Users/ahsanghani/WebstormProjects/reactbootcamp/src/cartcontext.js"],"names":["React","useState","useEffect","Context","createContext","ContextProvider","children","allPhotos","setAllPhotos","cartItems","setCartItems","url","fetch","then","res","json","data","toggleFavourite","id","updatedArr","map","photo","console","log","isFavourite","addToCart","newItem","prevItems","removeFromCart","filter","item"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,MAAMC,OAAO,GAAGH,KAAK,CAACI,aAAN,EAAhB;;AAEA,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAuC;AACrC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMU,GAAG,GACP,8FADF;AAGAT,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACAU,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUR,YAAY,CAACQ,IAAD,CAF9B;AAGD,GANQ,EAMN,EANM,CAAT;;AAQA,WAASC,eAAT,CAAyBC,EAAzB,EAA6B;AAC3B,UAAMC,UAAU,GAAGZ,SAAS,CAACa,GAAV,CAAeC,KAAD,IAAW;AAC1C,UAAIA,KAAK,CAACH,EAAN,KAAaA,EAAjB,EAAqB;AACnBI,QAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,KAAK,CAACG,WAAnB;AACA,eAAO,EACL,GAAGH,KADE;AAELG,UAAAA,WAAW,EAAE,CAACH,KAAK,CAACG;AAFf,SAAP;AAID;;AACD,aAAOH,KAAP;AACD,KAVkB,CAAnB;AAWAb,IAAAA,YAAY,CAACW,UAAD,CAAZ;AACD;;AAED,WAASM,SAAT,CAAmBC,OAAnB,EAA4B;AAC1BhB,IAAAA,YAAY,CAAEiB,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeD,OAAf,CAAhB,CAAZ;AACD;;AAED,WAASE,cAAT,CAAwBV,EAAxB,EAA4B;AAC1BR,IAAAA,YAAY,CAAEiB,SAAD,IAAeA,SAAS,CAACE,MAAV,CAAkBC,IAAD,IAAUA,IAAI,CAACZ,EAAL,KAAYA,EAAvC,CAAhB,CAAZ;AACD;;AAED,sBACE,oBAAC,OAAD,CAAS,QAAT;AACE,IAAA,KAAK,EAAE;AAAEX,MAAAA,SAAF;AAAaU,MAAAA,eAAb;AAA8BR,MAAAA,SAA9B;AAAwCgB,MAAAA,SAAxC;AAAkDG,MAAAA;AAAlD,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGtB,QAHH,CADF;AAOD;;AAED,SAASD,eAAT,EAA0BF,OAA1B","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Context = React.createContext();\n\nfunction ContextProvider({ children }) {\n  const [allPhotos, setAllPhotos] = useState([]);\n  const [cartItems, setCartItems] = useState([]);\n\n  const url =\n    \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\";\n\n  useEffect(() => {\n    // Get the data from the api\n    // save the data to state\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => setAllPhotos(data));\n  }, []);\n\n  function toggleFavourite(id) {\n    const updatedArr = allPhotos.map((photo) => {\n      if (photo.id === id) {\n        console.log(id);\n        console.log(!photo.isFavourite);\n        return {\n          ...photo,\n          isFavourite: !photo.isFavourite,\n        };\n      }\n      return photo;\n    });\n    setAllPhotos(updatedArr);\n  }\n\n  function addToCart(newItem) {\n    setCartItems((prevItems) => [...prevItems, newItem]);\n  }\n\n  function removeFromCart(id) {\n    setCartItems((prevItems) => prevItems.filter((item) => item.id !== id));\n  }\n\n  return (\n    <Context.Provider\n      value={{ allPhotos, toggleFavourite, cartItems,addToCart,removeFromCart }}\n    >\n      {children}\n    </Context.Provider>\n  );\n}\n\nexport { ContextProvider, Context };\n"]},"metadata":{},"sourceType":"module"}