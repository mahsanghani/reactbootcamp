{"ast":null,"code":"import redux, { createStore } from \"redux\";\n/**\n * Challenge: set up redux action creators, reducer, and store\n * We'll be building a counter app to start out.\n * Read the comments below for the step-by-step challenges\n */\n// 1. Create action creators for having the count \"increment\" and \"decrement\"\n// 2. Create a reducer to handle your increment and decrement actions\n// 3. Create a new Redux store\n// 4. Set up the subscribe function so we can more easily see the changes to the Redux state as they happen\n// 5. Export the store as a default export\n\nfunction increment() {\n  return {\n    type: \"INCREMENT\"\n  };\n}\n\nfunction decrement() {\n  return {\n    type: \"DECREMENT\"\n  };\n}\n\nfunction reducer(count = 0, action) {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return count + 1;\n\n    case \"DECREMENT\":\n      return count - 1;\n\n    default:\n      return count;\n  }\n}\n\nconst store = createStore(reducer);\nstore.subscribe(() => console.log(store.getState()));\nexport default store;","map":{"version":3,"sources":["/Users/ahsanghani/WebstormProjects/reactbootcamp/src/reduxreact/index.js"],"names":["redux","createStore","increment","type","decrement","reducer","count","action","store","subscribe","console","log","getState"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,WAAf,QAAiC,OAAjC;AAEA;;;;;AAMA;AACA;AACA;AACA;AACA;;AAEA,SAASC,SAAT,GAAqB;AACjB,SAAO;AACHC,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH;;AAED,SAASC,SAAT,GAAqB;AACjB,SAAO;AACHD,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH;;AAED,SAASE,OAAT,CAAiBC,KAAK,GAAG,CAAzB,EAA4BC,MAA5B,EAAoC;AAChC,UAAOA,MAAM,CAACJ,IAAd;AACI,SAAK,WAAL;AACI,aAAOG,KAAK,GAAG,CAAf;;AACJ,SAAK,WAAL;AACI,aAAOA,KAAK,GAAG,CAAf;;AACJ;AACI,aAAOA,KAAP;AANR;AAQH;;AAED,MAAME,KAAK,GAAGP,WAAW,CAACI,OAAD,CAAzB;AACAG,KAAK,CAACC,SAAN,CAAgB,MAAMC,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ,CAAtB;AACA,eAAeJ,KAAf","sourcesContent":["import redux, {createStore} from \"redux\"\n\n/**\n * Challenge: set up redux action creators, reducer, and store\n * We'll be building a counter app to start out.\n * Read the comments below for the step-by-step challenges\n */\n\n// 1. Create action creators for having the count \"increment\" and \"decrement\"\n// 2. Create a reducer to handle your increment and decrement actions\n// 3. Create a new Redux store\n// 4. Set up the subscribe function so we can more easily see the changes to the Redux state as they happen\n// 5. Export the store as a default export\n\nfunction increment() {\n    return {\n        type: \"INCREMENT\"\n    }\n}\n\nfunction decrement() {\n    return {\n        type: \"DECREMENT\"\n    }\n}\n\nfunction reducer(count = 0, action) {\n    switch(action.type) {\n        case \"INCREMENT\":\n            return count + 1\n        case \"DECREMENT\":\n            return count - 1\n        default:\n            return count\n    }\n}\n\nconst store = createStore(reducer)\nstore.subscribe(() => console.log(store.getState()))\nexport default store\n"]},"metadata":{},"sourceType":"module"}