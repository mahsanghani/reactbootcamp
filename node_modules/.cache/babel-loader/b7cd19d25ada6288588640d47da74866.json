{"ast":null,"code":"const redux = require(\"redux\");\n\nconst initialState = {\n  count: 0\n};\nconst action = {\n  type: \"INCREMENT\"\n};\n\nfunction increment() {\n  return {\n    type: \"INCREMENT\"\n  };\n}\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        count: state.count + 1\n      };\n\n    case \"DECREMENT\":\n      return {\n        count: state.count - 1\n      };\n\n    default:\n      return state;\n  }\n}\n\nconst store = redux.createStore(reducer);\nstore.subscribe(() => {\n  console.log(store.getState());\n});\nstore.dispatch({\n  type: \"INCREMENT\"\n});\nstore.dispatch({\n  type: \"INCREMENT\"\n});\nstore.dispatch({\n  type: \"DECREMENT\"\n});","map":{"version":3,"sources":["/Users/ahsanghani/WebstormProjects/reactbootcamp/src/index.js"],"names":["redux","require","initialState","count","action","type","increment","reducer","state","store","createStore","subscribe","console","log","getState","dispatch"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,MAAMC,MAAM,GAAG;AACXC,EAAAA,IAAI,EAAE;AADK,CAAf;;AAIA,SAASC,SAAT,GAAqB;AACjB,SAAO;AACHD,IAAAA,IAAI,EAAE;AADH,GAAP;AAGH;;AAED,SAASE,OAAT,CAAiBC,KAAK,GAACN,YAAvB,EAAqCE,MAArC,EAA6C;AACzC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,WAAL;AACI,aAAO;AACHF,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,GAAc;AADlB,OAAP;;AAGJ,SAAK,WAAL;AACI,aAAO;AACHA,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,GAAc;AADlB,OAAP;;AAGJ;AACI,aAAOK,KAAP;AAVR;AAYH;;AAED,MAAMC,KAAK,GAAGT,KAAK,CAACU,WAAN,CAAkBH,OAAlB,CAAd;AAEAE,KAAK,CAACE,SAAN,CAAgB,MAAM;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,QAAN,EAAZ;AACH,CAFD;AAIAL,KAAK,CAACM,QAAN,CAAe;AAACV,EAAAA,IAAI,EAAE;AAAP,CAAf;AACAI,KAAK,CAACM,QAAN,CAAe;AAACV,EAAAA,IAAI,EAAE;AAAP,CAAf;AACAI,KAAK,CAACM,QAAN,CAAe;AAACV,EAAAA,IAAI,EAAE;AAAP,CAAf","sourcesContent":["const redux = require(\"redux\")\nconst initialState = {\n    count: 0\n}\n\nconst action = {\n    type: \"INCREMENT\"\n}\n\nfunction increment() {\n    return {\n        type: \"INCREMENT\"\n    }\n}\n\nfunction reducer(state=initialState, action) {\n    switch(action.type) {\n        case \"INCREMENT\":\n            return {\n                count: state.count + 1\n            }\n        case \"DECREMENT\":\n            return {\n                count: state.count - 1\n            }\n        default:\n            return state\n    }\n}\n\nconst store = redux.createStore(reducer)\n\nstore.subscribe(() => {\n    console.log(store.getState())\n})\n\nstore.dispatch({type: \"INCREMENT\"})\nstore.dispatch({type: \"INCREMENT\"})\nstore.dispatch({type: \"DECREMENT\"})\n"]},"metadata":{},"sourceType":"module"}