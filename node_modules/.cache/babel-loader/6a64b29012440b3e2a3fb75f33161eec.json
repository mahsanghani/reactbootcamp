{"ast":null,"code":"var _jsxFileName = \"/Users/ahsanghani/WebstormProjects/reactbootcamp/src/App.js\";\nimport React, { useState, useRef } from \"react\";\n\nfunction App() {\n  const [newTodoValue, setNewTodoValue] = useState(\"\");\n  const [todosList, setTodosList] = useState([]);\n  const inputRef = useRef(null);\n\n  function handleChange(event) {\n    setNewTodoValue(event.target.value);\n  }\n\n  function addTodo(event) {\n    event.preventDefault();\n    setTodosList(prevTodosList => [...prevTodosList, newTodoValue]);\n    setNewTodoValue(\"\");\n    inputRef.current.focus();\n  }\n\n  const allTodos = todosList.map(todo => /*#__PURE__*/React.createElement(\"p\", {\n    key: todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 44\n    }\n  }, todo));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputRef,\n    type: \"text\",\n    name: \"todo\",\n    value: newTodoValue,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Add todo item\")), allTodos);\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ahsanghani/WebstormProjects/reactbootcamp/src/App.js"],"names":["React","useState","useRef","App","newTodoValue","setNewTodoValue","todosList","setTodosList","inputRef","handleChange","event","target","value","addTodo","preventDefault","prevTodosList","current","focus","allTodos","map","todo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;;AAEA,SAASC,GAAT,GAAe;AACX,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMO,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;;AAEA,WAASO,YAAT,CAAsBC,KAAtB,EAA6B;AACzBL,IAAAA,eAAe,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACH;;AAED,WAASC,OAAT,CAAiBH,KAAjB,EAAwB;AACpBA,IAAAA,KAAK,CAACI,cAAN;AACAP,IAAAA,YAAY,CAACQ,aAAa,IAAI,CAAC,GAAGA,aAAJ,EAAmBX,YAAnB,CAAlB,CAAZ;AACAC,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAG,IAAAA,QAAQ,CAACQ,OAAT,CAAiBC,KAAjB;AACH;;AAED,QAAMC,QAAQ,GAAGZ,SAAS,CAACa,GAAV,CAAcC,IAAI,iBAAI;AAAG,IAAA,GAAG,EAAEA,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAeA,IAAf,CAAtB,CAAjB;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,GAAG,EAAEZ,QAAZ;AAAsB,IAAA,IAAI,EAAC,MAA3B;AAAkC,IAAA,IAAI,EAAC,MAAvC;AAA8C,IAAA,KAAK,EAAEJ,YAArD;AAAmE,IAAA,QAAQ,EAAEK,YAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAQ,IAAA,OAAO,EAAEI,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CADJ,EAKKK,QALL,CADJ;AASH;;AAED,eAAef,GAAf","sourcesContent":["import React, {useState, useRef} from \"react\"\n\nfunction App() {\n    const [newTodoValue, setNewTodoValue] = useState(\"\")\n    const [todosList, setTodosList] = useState([])\n    const inputRef = useRef(null)\n\n    function handleChange(event) {\n        setNewTodoValue(event.target.value)\n    }\n\n    function addTodo(event) {\n        event.preventDefault()\n        setTodosList(prevTodosList => [...prevTodosList, newTodoValue])\n        setNewTodoValue(\"\")\n        inputRef.current.focus()\n    }\n\n    const allTodos = todosList.map(todo => <p key={todo}>{todo}</p>)\n\n    return (\n        <div>\n            <form>\n                <input ref={inputRef} type=\"text\" name=\"todo\" value={newTodoValue} onChange={handleChange}/>\n                <button onClick={addTodo}>Add todo item</button>\n            </form>\n            {allTodos}\n        </div>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}