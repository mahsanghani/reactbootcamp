{"ast":null,"code":"var _jsxFileName = \"/Users/ahsanghani/WebstormProjects/reactbootcamp/src/App.js\";\nimport React from \"react\";\nimport DataFetcher from \"./DataFetcher\";\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DataFetcher, {\n    url: \"https://swapi.co/api/people/1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/ahsanghani/WebstormProjects/reactbootcamp/src/App.js"],"names":["React","DataFetcher","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,GAAT,GAAe;AACX,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAC,+BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAmBH;;AAED,eAAeA,GAAf","sourcesContent":["import React from \"react\"\nimport DataFetcher from \"./DataFetcher\"\n\nfunction App() {\n    return (\n        <div>\n            <DataFetcher url=\"https://swapi.co/api/people/1\">\n                {/**\n                 * Part 2: Call the function the DataFetcher is expecting.\n                 * If should receive the data and the loading state, and return the JSX\n                 * that makes use of that info. If the data is still loading, display\n                 * \"Loading...\" in an h1 element, and once the data has loaded, just display\n                 * the data with `<p>{JSON.stringify(data)}</p>`\n                 *\n                 * Remember: With the render props pattern, you can use a custom prop\n                 * (typically called `render`), OR you can use `props.children`. Based\n                 * on what's already written here for you, you should be able to figure\n                 * out which of these we're using. (You may have to make changes to the\n                 * DataFetcher component based on what you see here.)\n                 */}\n            </DataFetcher>\n        </div>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}