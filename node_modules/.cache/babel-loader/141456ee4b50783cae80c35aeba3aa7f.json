{"ast":null,"code":"var _jsxFileName = \"/Users/ahsanghani/WebstormProjects/reactbootcamp/src/App.js\";\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { increment, decrement } from \"./reduxreact/index\";\n\nfunction App(props) {\n  const count = useSelector(state => state);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, count), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(decrement()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(increment()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, \"+\"));\n} // import {connect} from \"react-redux\"\n// function App(props) {\n//     return (\n//         <div>\n//             <h1>{props.count}</h1>\n//             <button onClick={props.decrement}>-</button>\n//             <button onClick={props.increment}>+</button>\n//         </div>\n//     )\n// }\n// Write the mapStateToProps function from scratch\n// Takes the global state from Redux as a parameter\n// returns an object where the keys are the name of the prop your component wants,\n// and the values are the actual parts of the global state your component wants\n// const mapStateToProps = (globalState) => ({count: globalState})\n// function mapStateToProps(state) {\n//     return {\n//         count: state\n//     }\n// }\n// const mapDispatchToProps = {\n//     increment: increment,\n//     decrement: decrement\n// }\n//\n// export default connect(mapStateToProps, {})(App)\n// https://react-redux.js.org/api/connect#connect\n\n\nexport default connect(state => ({\n  count: state\n}), {\n  increment,\n  decrement\n})(App);","map":{"version":3,"sources":["/Users/ahsanghani/WebstormProjects/reactbootcamp/src/App.js"],"names":["React","useSelector","useDispatch","increment","decrement","App","props","count","state","dispatch","connect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,SAAQC,SAAR,EAAmBC,SAAnB,QAAmC,oBAAnC;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAChB,QAAMC,KAAK,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAV,CAAzB;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKK,KAAL,CADJ,eAEI;AAAQ,IAAA,OAAO,EAAE,MAAME,QAAQ,CAACL,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,eAGI;AAAQ,IAAA,OAAO,EAAE,MAAMK,QAAQ,CAACN,SAAS,EAAV,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,CADJ;AAOH,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,eAAeO,OAAO,CAACF,KAAK,KAAK;AAACD,EAAAA,KAAK,EAAEC;AAAR,CAAL,CAAN,EAA4B;AAACL,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAA5B,CAAP,CAA2DC,GAA3D,CAAf","sourcesContent":["import React from \"react\"\nimport {useSelector,useDispatch} from \"react-redux\";\nimport {increment, decrement} from \"./reduxreact/index\"\n\nfunction App(props) {\n    const count = useSelector(state => state)\n    const dispatch = useDispatch()\n    return (\n        <div>\n            <h1>{count}</h1>\n            <button onClick={() => dispatch(decrement())}>-</button>\n            <button onClick={() => dispatch(increment())}>+</button>\n        </div>\n    )\n}\n\n\n// import {connect} from \"react-redux\"\n// function App(props) {\n//     return (\n//         <div>\n//             <h1>{props.count}</h1>\n//             <button onClick={props.decrement}>-</button>\n//             <button onClick={props.increment}>+</button>\n//         </div>\n//     )\n// }\n\n// Write the mapStateToProps function from scratch\n// Takes the global state from Redux as a parameter\n// returns an object where the keys are the name of the prop your component wants,\n// and the values are the actual parts of the global state your component wants\n\n// const mapStateToProps = (globalState) => ({count: globalState})\n\n// function mapStateToProps(state) {\n//     return {\n//         count: state\n//     }\n// }\n\n// const mapDispatchToProps = {\n//     increment: increment,\n//     decrement: decrement\n// }\n//\n// export default connect(mapStateToProps, {})(App)\n\n// https://react-redux.js.org/api/connect#connect\n\nexport default connect(state => ({count: state}), {increment, decrement})(App)\n"]},"metadata":{},"sourceType":"module"}