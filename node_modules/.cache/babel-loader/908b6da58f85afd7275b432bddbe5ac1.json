{"ast":null,"code":"var _jsxFileName = \"/Users/ahsanghani/WebstormProjects/reactbootcamp/src/ecommercesite/components/image.js\";\nimport React, { useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Context } from \"../../cartcontext\";\nimport useHover from \"../hooks/usehover\";\n\nfunction Image({\n  className,\n  img\n}) {\n  const [hovered, ref] = useHover(); // const [hovered, setHovered] = useState(false);\n\n  const {\n    toggleFavourite,\n    cartItems,\n    addToCart,\n    removeFromCart\n  } = useContext(Context);\n  /**\n     <i className=\"ri-heart-line favorite\"></i>\n     <i className=\"ri-add-circle-line cart\"></i>\n    <i className=\"ri-heart-fill favorite\"></i>\n     */\n  // const heartIcon = hovered && (\n  //   <i\n  //     className=\"ri-heart-line favorite\"\n  //     onClick={() => toggleFavourite(img.id)}\n  //   ></i>\n  // );\n\n  function heartIcon() {\n    if (img.isFavourite) {\n      return /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ri-heart-fill favorite\",\n        onClick: () => toggleFavourite(img.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      });\n    } else if (hovered) {\n      return /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ri-heart-line favorite\",\n        onClick: () => toggleFavourite(img.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      });\n    }\n  }\n\n  function cartIcon() {\n    // if the item is already in the cart\n    // return <i className=\"ri-shopping-cart-fill cart\"></i>\n    // else if the image is being hovered\n    // return <i className=\"ri-add-circle-line cart\" onClick={() => addToCart(img)}></i>\n    const alreadyInCart = cartItems.some(item => item.id === img.id);\n\n    if (alreadyInCart) {\n      return /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ri-shopping-cart-fill cart\",\n        onClick: () => removeFromCart(img.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      });\n    } else if (hovered) {\n      return /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ri-add-circle-line cart\",\n        onClick: () => addToCart(img),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      });\n    }\n  } // const cartIcon = hovered && (\n  //   <i className=\"ri-add-circle-line cart\" onClick={() => addToCart(img)}></i>\n  // );\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `${className} image-container`,\n    onMouseEnter: () => setHovered(true),\n    onMouseLeave: () => setHovered(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: img.url,\n    className: \"image-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), heartIcon(), cartIcon);\n}\n\nImage.propTypes = {\n  className: PropTypes.string,\n  img: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    isFavorite: PropTypes.bool\n  })\n};\nexport default Image;","map":{"version":3,"sources":["/Users/ahsanghani/WebstormProjects/reactbootcamp/src/ecommercesite/components/image.js"],"names":["React","useState","useContext","PropTypes","Context","useHover","Image","className","img","hovered","ref","toggleFavourite","cartItems","addToCart","removeFromCart","heartIcon","isFavourite","id","cartIcon","alreadyInCart","some","item","setHovered","url","propTypes","string","shape","isRequired","isFavorite","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAmC;AACjC,QAAM,CAACC,OAAD,EAASC,GAAT,IAAcL,QAAQ,EAA5B,CADiC,CAEjC;;AACA,QAAM;AAAEM,IAAAA,eAAF;AAAmBC,IAAAA,SAAnB;AAA8BC,IAAAA,SAA9B;AAAyCC,IAAAA;AAAzC,MAA4DZ,UAAU,CAC1EE,OAD0E,CAA5E;AAGA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASW,SAAT,GAAqB;AACnB,QAAIP,GAAG,CAACQ,WAAR,EAAqB;AACnB,0BACE;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,OAAO,EAAE,MAAML,eAAe,CAACH,GAAG,CAACS,EAAL,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD,KAPD,MAOO,IAAIR,OAAJ,EAAa;AAClB,0BACE;AACE,QAAA,SAAS,EAAC,wBADZ;AAEE,QAAA,OAAO,EAAE,MAAME,eAAe,CAACH,GAAG,CAACS,EAAL,CAFhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD;AACF;;AAED,WAASC,QAAT,GAAoB;AAClB;AACA;AACA;AACA;AACA,UAAMC,aAAa,GAAGP,SAAS,CAACQ,IAAV,CAAgBC,IAAD,IAAUA,IAAI,CAACJ,EAAL,KAAYT,GAAG,CAACS,EAAzC,CAAtB;;AACA,QAAIE,aAAJ,EAAmB;AACjB,0BACE;AACE,QAAA,SAAS,EAAC,4BADZ;AAEE,QAAA,OAAO,EAAE,MAAML,cAAc,CAACN,GAAG,CAACS,EAAL,CAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD,KAPD,MAOO,IAAIR,OAAJ,EAAa;AAClB,0BACE;AACE,QAAA,SAAS,EAAC,yBADZ;AAEE,QAAA,OAAO,EAAE,MAAMI,SAAS,CAACL,GAAD,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD;AACF,GAzDgC,CA2DjC;AACA;AACA;;;AAEA,sBACE;AACE,IAAA,SAAS,EAAG,GAAED,SAAU,kBAD1B;AAEE,IAAA,YAAY,EAAE,MAAMe,UAAU,CAAC,IAAD,CAFhC;AAGE,IAAA,YAAY,EAAE,MAAMA,UAAU,CAAC,KAAD,CAHhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAK,IAAA,GAAG,EAAEd,GAAG,CAACe,GAAd;AAAmB,IAAA,SAAS,EAAC,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAMGR,SAAS,EANZ,EAOGG,QAPH,CADF;AAWD;;AAEDZ,KAAK,CAACkB,SAAN,GAAkB;AAChBjB,EAAAA,SAAS,EAAEJ,SAAS,CAACsB,MADL;AAEhBjB,EAAAA,GAAG,EAAEL,SAAS,CAACuB,KAAV,CAAgB;AACnBT,IAAAA,EAAE,EAAEd,SAAS,CAACsB,MAAV,CAAiBE,UADF;AAEnBJ,IAAAA,GAAG,EAAEpB,SAAS,CAACsB,MAAV,CAAiBE,UAFH;AAGnBC,IAAAA,UAAU,EAAEzB,SAAS,CAAC0B;AAHH,GAAhB;AAFW,CAAlB;AASA,eAAevB,KAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Context } from \"../../cartcontext\";\nimport useHover from \"../hooks/usehover\";\n\nfunction Image({ className, img }) {\n  const [hovered,ref]=useHover()\n  // const [hovered, setHovered] = useState(false);\n  const { toggleFavourite, cartItems, addToCart, removeFromCart } = useContext(\n    Context\n  );\n  /**\n     <i className=\"ri-heart-line favorite\"></i>\n     <i className=\"ri-add-circle-line cart\"></i>\n    <i className=\"ri-heart-fill favorite\"></i>\n     */\n  // const heartIcon = hovered && (\n  //   <i\n  //     className=\"ri-heart-line favorite\"\n  //     onClick={() => toggleFavourite(img.id)}\n  //   ></i>\n  // );\n\n  function heartIcon() {\n    if (img.isFavourite) {\n      return (\n        <i\n          className=\"ri-heart-fill favorite\"\n          onClick={() => toggleFavourite(img.id)}\n        ></i>\n      );\n    } else if (hovered) {\n      return (\n        <i\n          className=\"ri-heart-line favorite\"\n          onClick={() => toggleFavourite(img.id)}\n        ></i>\n      );\n    }\n  }\n\n  function cartIcon() {\n    // if the item is already in the cart\n    // return <i className=\"ri-shopping-cart-fill cart\"></i>\n    // else if the image is being hovered\n    // return <i className=\"ri-add-circle-line cart\" onClick={() => addToCart(img)}></i>\n    const alreadyInCart = cartItems.some((item) => item.id === img.id);\n    if (alreadyInCart) {\n      return (\n        <i\n          className=\"ri-shopping-cart-fill cart\"\n          onClick={() => removeFromCart(img.id)}\n        ></i>\n      );\n    } else if (hovered) {\n      return (\n        <i\n          className=\"ri-add-circle-line cart\"\n          onClick={() => addToCart(img)}\n        ></i>\n      );\n    }\n  }\n\n  // const cartIcon = hovered && (\n  //   <i className=\"ri-add-circle-line cart\" onClick={() => addToCart(img)}></i>\n  // );\n\n  return (\n    <div\n      className={`${className} image-container`}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n    >\n      <img src={img.url} className=\"image-grid\" />\n      {heartIcon()}\n      {cartIcon}\n    </div>\n  );\n}\n\nImage.propTypes = {\n  className: PropTypes.string,\n  img: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    isFavorite: PropTypes.bool,\n  }),\n};\n\nexport default Image;\n"]},"metadata":{},"sourceType":"module"}