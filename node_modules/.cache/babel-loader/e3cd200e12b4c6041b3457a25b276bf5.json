{"ast":null,"code":"var _jsxFileName = \"/Users/ahsanghani/WebstormProjects/reactbootcamp/src/themecontext.js\";\nimport React, { Component } from \"react\";\nconst {\n  ThemeContext\n} = React.createContext();\n/**\n * Challenge:\n * 1) Add state to hold the current theme\n * 2) Add a method for flipping the state between light and dark\n *\n */\n\nclass ThemeContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      theme: \"dark\"\n    };\n\n    this.toggleTheme = () => {\n      this.setState(prevState => {\n        return {\n          theme: prevState.theme === \"light\" ? \"dark\" : \"light\"\n        };\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n      value: {\n        theme: this.state.theme,\n        toggleTheme: this.toggleTheme\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport { ThemeContextProvider, ThemeContext };","map":{"version":3,"sources":["/Users/ahsanghani/WebstormProjects/reactbootcamp/src/themecontext.js"],"names":["React","Component","ThemeContext","createContext","ThemeContextProvider","state","theme","toggleTheme","setState","prevState","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,MAAM;AAACC,EAAAA;AAAD,IAAiBF,KAAK,CAACG,aAAN,EAAvB;AAEA;;;;;;;AAOA,MAAMC,oBAAN,SAAmCH,SAAnC,CAA6C;AAAA;AAAA;AAAA,SACzCI,KADyC,GACjC;AACJC,MAAAA,KAAK,EAAE;AADH,KADiC;;AAAA,SAKzCC,WALyC,GAK3B,MAAM;AAChB,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,eAAO;AACHH,UAAAA,KAAK,EAAEG,SAAS,CAACH,KAAV,KAAoB,OAApB,GAA8B,MAA9B,GAAuC;AAD3C,SAAP;AAGH,OAJD;AAKH,KAXwC;AAAA;;AAazCI,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE;AAACJ,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAnB;AAA0BC,QAAAA,WAAW,EAAE,KAAKA;AAA5C,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKI,KAAL,CAAWC,QADhB,CADJ;AAKH;;AAnBwC;;AAsB7C,SAAQR,oBAAR,EAA8BF,YAA9B","sourcesContent":["import React, {Component} from \"react\"\nconst {ThemeContext} = React.createContext()\n\n/**\n * Challenge:\n * 1) Add state to hold the current theme\n * 2) Add a method for flipping the state between light and dark\n *\n */\n\nclass ThemeContextProvider extends Component {\n    state = {\n        theme: \"dark\"\n    }\n\n    toggleTheme = () => {\n        this.setState(prevState => {\n            return {\n                theme: prevState.theme === \"light\" ? \"dark\" : \"light\"\n            }\n        })\n    }\n\n    render() {\n        return (\n            <ThemeContext.Provider value={{theme: this.state.theme, toggleTheme: this.toggleTheme}}>\n                {this.props.children}\n            </ThemeContext.Provider>\n        )\n    }\n}\n\nexport {ThemeContextProvider, ThemeContext}\n"]},"metadata":{},"sourceType":"module"}