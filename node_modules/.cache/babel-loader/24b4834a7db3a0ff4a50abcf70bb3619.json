{"ast":null,"code":"var _jsxFileName = \"/Users/ahsanghani/WebstormProjects/reactbootcamp/src/App.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\n\nfunction App(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, props.count), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, \"+\"));\n} // function mapStateToProps(globalState) {\n//     // return an object where the keys are the name of the prop your component wants,\n//     // values are the actual parts of the global state your component wants\n//     return {\n//         count: \"Hello\"\n//     }\n// }\n// Write the mapStateToProps function from scratch\n// Takes the global state from Redux as a parameter\n// returns an object where the keys are the name of the prop your component wants,\n// and the values are the actual parts of the global state your component wants\n\n\nconst mapStateToProps = globalState => ({\n  count: globalState\n});\n\nexport default connect(mapStateToProps, {})(App);","map":{"version":3,"sources":["/Users/ahsanghani/WebstormProjects/reactbootcamp/src/App.js"],"names":["React","connect","App","props","count","mapStateToProps","globalState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAChB,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,KAAX,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,CADJ;AAOH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,MAAMC,eAAe,GAAIC,WAAD,KAAkB;AAACF,EAAAA,KAAK,EAAEE;AAAR,CAAlB,CAAxB;;AAEA,eAAeL,OAAO,CAACI,eAAD,EAAkB,EAAlB,CAAP,CAA6BH,GAA7B,CAAf","sourcesContent":["import React from \"react\"\nimport {connect} from \"react-redux\"\n\nfunction App(props) {\n    return (\n        <div>\n            <h1>{props.count}</h1>\n            <button>-</button>\n            <button>+</button>\n        </div>\n    )\n}\n\n// function mapStateToProps(globalState) {\n//     // return an object where the keys are the name of the prop your component wants,\n//     // values are the actual parts of the global state your component wants\n//     return {\n//         count: \"Hello\"\n//     }\n// }\n\n// Write the mapStateToProps function from scratch\n// Takes the global state from Redux as a parameter\n// returns an object where the keys are the name of the prop your component wants,\n// and the values are the actual parts of the global state your component wants\n\nconst mapStateToProps = (globalState) => ({count: globalState})\n\nexport default connect(mapStateToProps, {})(App)\n"]},"metadata":{},"sourceType":"module"}