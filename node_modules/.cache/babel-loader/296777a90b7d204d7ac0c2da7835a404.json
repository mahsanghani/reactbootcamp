{"ast":null,"code":"var _jsxFileName = \"/Users/ahsanghani/WebstormProjects/reactbootcamp/src/grandparent.js\";\nimport React, { Component } from \"react\";\nimport Parent from \"./parent\";\n\nfunction GrandParent(props) {\n  console.log(\"[üë¥üèº]   [ ]   [ ]   [ ] rendered\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, \"I'm a GrandParent Component\"), /*#__PURE__*/React.createElement(Parent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Parent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction areEqual(prevProps, nextProps) {\n  /*\n  return true if passing nextProps to render would return\n  the same result as passing prevProps to render,\n  otherwise return false\n  */\n} // class GrandParent extends Component {\n//     shouldComponentUpdate(nextProps, nextState) {\n//         if (nextProps.count === this.props.count) {\n//             return false\n//         }\n//         return true\n//     }\n//     render() {\n//         console.log(\"[üë¥üèº]   [ ]   [ ]   [ ] rendered\")\n//         return (\n//             <div>\n//                 <p>I'm a GrandParent Component</p>\n//                 <Parent />\n//                 <Parent />\n//             </div>\n//         )\n//     }\n// }\n\n\nexport default React.memo(GrandParent, areEqual);","map":{"version":3,"sources":["/Users/ahsanghani/WebstormProjects/reactbootcamp/src/grandparent.js"],"names":["React","Component","Parent","GrandParent","props","console","log","areEqual","prevProps","nextProps","memo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH;;AAED,SAASC,QAAT,CAAkBC,SAAlB,EAA6BC,SAA7B,EAAuC;AACnC;;;;;AAKH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeT,KAAK,CAACU,IAAN,CAAWP,WAAX,EAAwBI,QAAxB,CAAf","sourcesContent":["import React, {Component} from \"react\"\nimport Parent from \"./parent\"\n\nfunction GrandParent(props) {\n    console.log(\"[üë¥üèº]   [ ]   [ ]   [ ] rendered\")\n    return (\n        <div>\n            <p>I'm a GrandParent Component</p>\n            <Parent />\n            <Parent />\n        </div>\n    )\n}\n\nfunction areEqual(prevProps, nextProps){\n    /*\n  return true if passing nextProps to render would return\n  the same result as passing prevProps to render,\n  otherwise return false\n  */\n}\n\n// class GrandParent extends Component {\n//     shouldComponentUpdate(nextProps, nextState) {\n//         if (nextProps.count === this.props.count) {\n//             return false\n//         }\n//         return true\n//     }\n//     render() {\n//         console.log(\"[üë¥üèº]   [ ]   [ ]   [ ] rendered\")\n//         return (\n//             <div>\n//                 <p>I'm a GrandParent Component</p>\n//                 <Parent />\n//                 <Parent />\n//             </div>\n//         )\n//     }\n// }\n\nexport default React.memo(GrandParent, areEqual)\n"]},"metadata":{},"sourceType":"module"}