{"ast":null,"code":"var _jsxFileName = \"/Users/ahsanghani/WebstormProjects/reactbootcamp/src/themecontext.js\";\nimport React, { Component } from \"react\";\nconst {\n  ThemeContext\n} = React.createContext();\n/**\n * Challenge:\n * 1) Add state to hold the current theme\n * 2) Add a method for flipping the state between light and dark\n *\n */\n\nclass ThemeContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      theme: \"dark\"\n    };\n\n    this.toggleTheme = () => {\n      this.setState(prevState => {\n        return {\n          theme: prevState.theme === \"light\" ? \"dark\" : \"light\"\n        };\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n      value: {\n        theme: this.state.theme,\n        toggleTheme: this.toggleTheme\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport { ThemeContextProvider, ThemeContext };","map":{"version":3,"sources":["/Users/ahsanghani/WebstormProjects/reactbootcamp/src/themecontext.js"],"names":["React","Component","ThemeContext","createContext","ThemeContextProvider","state","theme","toggleTheme","setState","prevState","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAmBF,KAAK,CAACG,aAAN,EAAzB;AAEA;;;;;;;AAOA,MAAMC,oBAAN,SAAmCH,SAAnC,CAA6C;AAAA;AAAA;AAAA,SAC3CI,KAD2C,GACnC;AACNC,MAAAA,KAAK,EAAE;AADD,KADmC;;AAAA,SAK3CC,WAL2C,GAK7B,MAAM;AAClB,WAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,eAAO;AACLH,UAAAA,KAAK,EAAEG,SAAS,CAACH,KAAV,KAAoB,OAApB,GAA8B,MAA9B,GAAuC;AADzC,SAAP;AAGD,OAJD;AAKD,KAX0C;AAAA;;AAa3CI,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,YAAD,CAAc,QAAd;AACE,MAAA,KAAK,EAAE;AAAEJ,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAApB;AAA2BC,QAAAA,WAAW,EAAE,KAAKA;AAA7C,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGG,KAAKI,KAAL,CAAWC,QAHd,CADF;AAOD;;AArB0C;;AAwB7C,SAASR,oBAAT,EAA+BF,YAA/B","sourcesContent":["import React, { Component } from \"react\";\nconst { ThemeContext } = React.createContext();\n\n/**\n * Challenge:\n * 1) Add state to hold the current theme\n * 2) Add a method for flipping the state between light and dark\n *\n */\n\nclass ThemeContextProvider extends Component {\n  state = {\n    theme: \"dark\",\n  };\n\n  toggleTheme = () => {\n    this.setState((prevState) => {\n      return {\n        theme: prevState.theme === \"light\" ? \"dark\" : \"light\",\n      };\n    });\n  };\n\n  render() {\n    return (\n      <ThemeContext.Provider\n        value={{ theme: this.state.theme, toggleTheme: this.toggleTheme }}\n      >\n        {this.props.children}\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nexport { ThemeContextProvider, ThemeContext };\n"]},"metadata":{},"sourceType":"module"}