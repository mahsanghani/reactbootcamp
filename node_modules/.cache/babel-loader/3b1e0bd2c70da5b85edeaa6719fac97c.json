{"ast":null,"code":"var _jsxFileName = \"/Users/ahsanghani/WebstormProjects/reactbootcamp/src/HOC2/withToggler.js\";\nimport React, { Component } from \"react\"; // HOC is a function that takes a component as a parameter\n// and returns a new component wrapping the given component\n// and \"supercharging\" it by giving it some extra abilities\n\nclass Toggler extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      on: this.props.defaultOnValue\n    };\n\n    this.toggle = () => {\n      this.setState(prevState => {\n        return {\n          on: !prevState.on\n        };\n      });\n    };\n  }\n\n  render() {\n    // const Component = this.props.component;\n    const {\n      component: C,\n      defaultOnValue,\n      ...props\n    } = this.props;\n    return /*#__PURE__*/React.createElement(C, Object.assign({\n      on: this.state.on,\n      toggle: this.toggle\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nexport function withToggler(component, optionsObj) {\n  return function (props) {\n    return /*#__PURE__*/React.createElement(Toggler, Object.assign({\n      component: component,\n      defaultOnValue: optionsObj.defaultOnValue\n    }, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }));\n  };\n}","map":{"version":3,"sources":["/Users/ahsanghani/WebstormProjects/reactbootcamp/src/HOC2/withToggler.js"],"names":["React","Component","Toggler","state","on","props","defaultOnValue","toggle","setState","prevState","render","component","C","withToggler","optionsObj"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B,C,CAEA;AACA;AACA;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC9BE,KAD8B,GACtB;AACNC,MAAAA,EAAE,EAAE,KAAKC,KAAL,CAAWC;AADT,KADsB;;AAAA,SAK9BC,MAL8B,GAKrB,MAAM;AACb,WAAKC,QAAL,CAAeC,SAAD,IAAe;AAC3B,eAAO;AACLL,UAAAA,EAAE,EAAE,CAACK,SAAS,CAACL;AADV,SAAP;AAGD,OAJD;AAKD,KAX6B;AAAA;;AAa9BM,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAACC,MAAAA,SAAS,EAAEC,CAAZ;AAAeN,MAAAA,cAAf;AAA+B,SAAGD;AAAlC,QAA2C,KAAKA,KAAtD;AACA,wBACE,oBAAC,CAAD;AAAG,MAAA,EAAE,EAAE,KAAKF,KAAL,CAAWC,EAAlB;AAAsB,MAAA,MAAM,EAAE,KAAKG;AAAnC,OAA+CF,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAGD;;AAnB6B;;AAsBhC,OAAO,SAASQ,WAAT,CAAqBF,SAArB,EAAgCG,UAAhC,EAA4C;AACjD,SAAO,UAAST,KAAT,EAAgB;AACrB,wBACI,oBAAC,OAAD;AAAS,MAAA,SAAS,EAAEM,SAApB;AAA+B,MAAA,cAAc,EAAEG,UAAU,CAACR;AAA1D,OAA8ED,KAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAGD,GAJD;AAKD","sourcesContent":["import React, {Component} from \"react\";\n\n// HOC is a function that takes a component as a parameter\n// and returns a new component wrapping the given component\n// and \"supercharging\" it by giving it some extra abilities\n\nclass Toggler extends Component {\n  state = {\n    on: this.props.defaultOnValue,\n  };\n\n  toggle = () => {\n    this.setState((prevState) => {\n      return {\n        on: !prevState.on,\n      };\n    });\n  };\n\n  render() {\n    // const Component = this.props.component;\n    const {component: C, defaultOnValue, ...props} = this.props\n    return (\n      <C on={this.state.on} toggle={this.toggle} {...props} />\n    );\n  }\n}\n\nexport function withToggler(component, optionsObj) {\n  return function(props) {\n    return (\n        <Toggler component={component} defaultOnValue={optionsObj.defaultOnValue} {...props}/>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}