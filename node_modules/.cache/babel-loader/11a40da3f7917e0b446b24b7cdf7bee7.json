{"ast":null,"code":"var _jsxFileName = \"/Users/ahsanghani/WebstormProjects/reactbootcamp/src/cartcontext.js\";\nimport React, { useState, useEffect } from \"react\";\nconst Context = React.createContext();\n\nfunction ContextProvider({\n  children\n}) {\n  const [allPhotos, setAllPhotos] = useState([]);\n  const url = \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\";\n  useEffect(() => {\n    // Get the data from the api\n    // save the data to state\n    fetch(url).then(res => res.json()).then(data => setAllPhotos(data));\n  }, []);\n\n  function toggleFavourite(id) {\n    const updatedArr = allPhotos.map(photo => {\n      if (photo.id === id) {\n        console.log(id);\n        console.log(!photo.isFavourite);\n        return { ...photo,\n          isFavourite: !photo.isFavourite\n        };\n      }\n\n      return photo;\n    });\n  }\n\n  console.log(allPhotos);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      allPhotos\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }, children);\n}\n\nexport { ContextProvider, Context };","map":{"version":3,"sources":["/Users/ahsanghani/WebstormProjects/reactbootcamp/src/cartcontext.js"],"names":["React","useState","useEffect","Context","createContext","ContextProvider","children","allPhotos","setAllPhotos","url","fetch","then","res","json","data","toggleFavourite","id","updatedArr","map","photo","console","log","isFavourite"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,MAAMC,OAAO,GAAGH,KAAK,CAACI,aAAN,EAAhB;;AAEA,SAASC,eAAT,CAAyB;AAAEC,EAAAA;AAAF,CAAzB,EAAuC;AACrC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AAEA,QAAMQ,GAAG,GACP,8FADF;AAGAP,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACAQ,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAUN,YAAY,CAACM,IAAD,CAF9B;AAGD,GANQ,EAMN,EANM,CAAT;;AAQA,WAASC,eAAT,CAAyBC,EAAzB,EAA6B;AAC3B,UAAMC,UAAU,GAAGV,SAAS,CAACW,GAAV,CAAeC,KAAD,IAAW;AAC1C,UAAIA,KAAK,CAACH,EAAN,KAAaA,EAAjB,EAAqB;AACnBI,QAAAA,OAAO,CAACC,GAAR,CAAYL,EAAZ;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,KAAK,CAACG,WAAnB;AACA,eAAO,EACL,GAAGH,KADE;AAELG,UAAAA,WAAW,EAAE,CAACH,KAAK,CAACG;AAFf,SAAP;AAID;;AACD,aAAOH,KAAP;AACD,KAVkB,CAAnB;AAWD;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AAEA,sBAAO,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AAAEA,MAAAA;AAAF,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCD,QAAzC,CAAP;AACD;;AAED,SAASD,eAAT,EAA0BF,OAA1B","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Context = React.createContext();\n\nfunction ContextProvider({ children }) {\n  const [allPhotos, setAllPhotos] = useState([]);\n\n  const url =\n    \"https://raw.githubusercontent.com/bobziroll/scrimba-react-bootcamp-images/master/images.json\";\n\n  useEffect(() => {\n    // Get the data from the api\n    // save the data to state\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => setAllPhotos(data));\n  }, []);\n\n  function toggleFavourite(id) {\n    const updatedArr = allPhotos.map((photo) => {\n      if (photo.id === id) {\n        console.log(id);\n        console.log(!photo.isFavourite);\n        return {\n          ...photo,\n          isFavourite: !photo.isFavourite,\n        };\n      }\n      return photo;\n    });\n  }\n\n  console.log(allPhotos);\n\n  return <Context.Provider value={{ allPhotos }}>{children}</Context.Provider>;\n}\n\nexport { ContextProvider, Context };\n"]},"metadata":{},"sourceType":"module"}